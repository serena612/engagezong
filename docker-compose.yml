version: '3.6'

services:
    redis:
        restart: always
        image: redis:alpine
        volumes:
            - ./redis-data:/data
    postgres:
        restart: always
        image: postgres:alpine
        expose:
            - 5432
        ports:
            - 5433:5432
        environment:
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        volumes:
            - ./psql-data:/var/lib/postgresql/data
    backend:
        restart: always
        image: engage/backend
        env_file:
            - ./.env
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        volumes:
            - ./backend:/backend
            - ./scripts:/scripts
        links:
            - postgres
            - redis
        environment:
            - DATABASE_NAME=${DATABASE_NAME}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_HOST=${DATABASE_HOST}
            - DATABASE_PORT=${DATABASE_PORT}
        command: >
            sh -c "/scripts/wait-for-it.sh postgres:5432 --
                   python manage.py runserver 0.0.0.0:8000"
        ports:
            - 8000:8000
    celery-worker:
        restart: always
        image: engage/backend
        env_file:
            - .env
        volumes:
            - ./backend:/backend
            - ./scripts:/scripts
        links:
            - postgres
            - redis
        environment:
            - DATABASE_NAME=${DATABASE_NAME}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_HOST=${DATABASE_HOST}
            - DATABASE_PORT=${DATABASE_PORT}
        command: >
            sh -c "/scripts/wait-for-it.sh postgres:5432 --
                   celery -A engage worker --beat -l info -S django"
